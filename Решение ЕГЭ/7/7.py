# 2 --------------------------------------------------------------------------
##print('w y z x F G')
##for x in range(2):
##    for y in range(2):
##        for z in range(2):
##            for w in range(2):
##                F = (x or (not y)) and (not (x == z)) or w
##                G = (x <= y) and (y <= z) and (z <= w)
##                if 1 <= x+y+z+w <= 2 and G: print(w, y, z, x, int(F), int(G))
##                if x+y+z+w <= 2 and F: print(x, y, z, w, int(F), int(G))
# 5 --------------------------------------------------------------------------
##def f(x):
##    str_2 = bin(x)[2:]
##    s = ''
##    k0 = 0
##    k1 = 0
##    for i in range(1, len(str_2), 2):
##        if str_2[i] == '0': k0 += 1
##        else: k1 += 1
####    print(k0, k1, str_2)
##    if k0 > k1:
##        for el in str_2:
##            if el == '1': s += '0'
##            else: s += '1'
##    if k0 <= k1:
##        for i in range(len(str_2)):
##            if i%2 == 1: s += '1'
##            else: s += str_2[i]
##    return int(s, 2)
##print(f(2758))
##arr = []           
##for i in range(10000):
##    print(f(i), i)
##    if f(i) > 1337: break
##    arr += [i]
##print(max(arr))
# 8 --------------------------------------------------------------------------
##from itertools import *
##c = 0
##for el in product('АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ', repeat=8):
##    c += 1
##    s = ''.join(el)
##    if s == 'РЕКУРСИЯ':
##        print(c)
# 9 -------------------------------------------------------------------------
f = open('9.txt')
arr  = []
for s in f:
    s = s.split(',')
    arr += [s]
print(arr)
# 12 --------------------------------------------------------------------------

# 13 --------------------------------------------------------------------------

# 14 --------------------------------------------------------------------------

# 15 --------------------------------------------------------------------------

# 16 --------------------------------------------------------------------------

# 17 --------------------------------------------------------------------------

# 19-21 --------------------------------------------------------------------------

# 23 --------------------------------------------------------------------------

# 24 --------------------------------------------------------------------------

# 25 --------------------------------------------------------------------------

# 26 --------------------------------------------------------------------------

# 27 --------------------------------------------------------------------------


